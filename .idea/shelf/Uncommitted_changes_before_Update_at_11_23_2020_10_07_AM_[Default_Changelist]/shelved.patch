Index: app/build.gradle
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>apply plugin: 'com.android.application'\r\napply plugin: 'com.google.gms.google-services'\r\n\r\nandroid {\r\n    compileSdkVersion 30\r\n    buildToolsVersion \"30.0.2\"\r\n\r\n    defaultConfig {\r\n        applicationId \"com.cs246.team1.spacedrepetition\"\r\n        minSdkVersion 24\r\n        targetSdkVersion 30\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n}\r\n\r\ndependencies {\r\n    implementation fileTree(dir: \"libs\", include: [\"*.jar\"])\r\n    implementation 'androidx.appcompat:appcompat:1.2.0'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.0.3'\r\n    implementation 'com.google.android.material:material:1.2.1'\r\n    testImplementation 'junit:junit:4.12'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.2'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'\r\n\r\n    implementation platform('com.google.firebase:firebase-bom:26.0.0')\r\n    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'\r\n\r\n    implementation 'com.google.code.gson:gson:2.8.6'\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/build.gradle	(revision b65d032e543367fc5796cc5d2c0701fb1745d6fe)
+++ app/build.gradle	(date 1605666430621)
@@ -32,8 +32,8 @@
     androidTestImplementation 'androidx.test.ext:junit:1.1.2'
     androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
 
-    implementation platform('com.google.firebase:firebase-bom:26.0.0')
-    implementation 'com.firebaseui:firebase-ui-auth:6.2.0'
+    implementation platform('com.google.firebase:firebase-bom:26.1.0')
+    implementation 'com.firebaseui:firebase-ui-auth:6.4.0'
 
     implementation 'com.google.code.gson:gson:2.8.6'
 
Index: app/src/main/java/com/cs246/team1/spacedrepetition/LoginActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs246.team1.spacedrepetition;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.os.Bundle;\r\nimport android.content.Intent;\r\n\r\nimport com.firebase.ui.auth.AuthUI;\r\nimport com.firebase.ui.auth.IdpResponse;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\nimport java.util.Arrays;\r\nimport java.util.List;\r\n\r\npublic class LoginActivity extends AppCompatActivity {\r\n\r\n    private static final int RC_SIGN_IN = 123;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n\r\n        // Configure supported auth providers\r\n        List<AuthUI.IdpConfig> providers = Arrays.asList(\r\n                new AuthUI.IdpConfig.EmailBuilder().build(),\r\n                new AuthUI.IdpConfig.GoogleBuilder().build()\r\n        );\r\n\r\n        // Create and launch sign-in intent\r\n        startActivityForResult(\r\n                AuthUI.getInstance()\r\n                        .createSignInIntentBuilder()\r\n                        .setAvailableProviders(providers)\r\n                        .build(),\r\n                RC_SIGN_IN\r\n        );\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n\r\n        if (requestCode == RC_SIGN_IN) {\r\n            IdpResponse response = IdpResponse.fromResultIntent(data);\r\n\r\n            if (resultCode == RESULT_OK) {\r\n                // Successfully signed in\r\n                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();\r\n                // ...\r\n            } else {\r\n                // Sign in failed. If response is null the user canceled the\r\n                // sign-in flow using the back button. Otherwise check\r\n                // response.getError().getErrorCode() and handle the error.\r\n                // ...\r\n            }\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cs246/team1/spacedrepetition/LoginActivity.java	(revision b65d032e543367fc5796cc5d2c0701fb1745d6fe)
+++ app/src/main/java/com/cs246/team1/spacedrepetition/LoginActivity.java	(date 1605665219290)
@@ -4,6 +4,7 @@
 
 import android.os.Bundle;
 import android.content.Intent;
+import android.util.Log;
 
 import com.firebase.ui.auth.AuthUI;
 import com.firebase.ui.auth.IdpResponse;
@@ -16,7 +17,7 @@
 import java.util.List;
 
 public class LoginActivity extends AppCompatActivity {
-
+    private static final String LOGTAG = "LoginActivity";
     private static final int RC_SIGN_IN = 123;
 
     @Override
@@ -49,12 +50,14 @@
             if (resultCode == RESULT_OK) {
                 // Successfully signed in
                 FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
+                Log.i(LOGTAG, "Successful Login");
                 // ...
             } else {
                 // Sign in failed. If response is null the user canceled the
                 // sign-in flow using the back button. Otherwise check
                 // response.getError().getErrorCode() and handle the error.
                 // ...
+                Log.i(LOGTAG, "Login failed");
             }
         }
     }
Index: app/src/main/java/com/cs246/team1/spacedrepetition/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.cs246.team1.spacedrepetition;\r\n\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.core.app.NotificationCompat;\r\nimport androidx.core.app.NotificationManagerCompat;\r\nimport androidx.fragment.app.DialogFragment;\r\n\r\nimport android.app.NotificationChannel;\r\nimport android.app.NotificationManager;\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.View;\r\nimport android.widget.AdapterView;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.ListView;\r\nimport android.widget.TextView;\r\nimport android.util.Log;\r\n\r\nimport com.firebase.ui.auth.AuthUI;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\n\r\nimport java.lang.reflect.Array;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class MainActivity extends AppCompatActivity implements\r\n        EditOrDeletePopUp.EditOrDeletePopUpListener {\r\n\r\n    private static final String LOGTAG = \"MainActivity\";\r\n    private static final String ReminderNotificationChannelId =\r\n            \"com.cs246.team1.spacedrepetition.notifications.reminders\";\r\n    private static final int RC_SIGN_IN = 123;\r\n    private FirebaseUser user;\r\n    private List<String> _reminderList = new ArrayList<String>();\r\n    private ArrayAdapter<String> _reminderAdapter;\r\n    private Reminder _testReminder;\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n\r\n        createNotificationChannel();\r\n\r\n        user = FirebaseAuth.getInstance().getCurrentUser();\r\n        if (user == null) {\r\n            startActivity(new Intent(this, LoginActivity.class));\r\n        } else {\r\n            TextView text = (TextView) findViewById(R.id.reminderLabel);\r\n            text.setText(\"Hello, \" + user.getDisplayName());\r\n        }\r\n\r\n        _testReminder = new Reminder();\r\n        _testReminder.setSummary(\"Test Reminder\");\r\n        _testReminder.setContent(\"Test content for the test reminder\");\r\n        _testReminder.setDaysToLive(10);\r\n\r\n        _reminderAdapter =\r\n                new ArrayAdapter<String>(\r\n                        this, android.R.layout.simple_list_item_1, _reminderList);\r\n        ListView reminderView = (ListView) findViewById(R.id.reminderList);\r\n        reminderView.setAdapter(_reminderAdapter);\r\n        reminderView.setOnItemClickListener(new AdapterView.OnItemClickListener() {\r\n            @Override\r\n            public void onItemClick(AdapterView<?> parent, View view,\r\n                                    int position, long id) {\r\n                DialogFragment dialog = new EditOrDeletePopUp();\r\n                dialog.show(getSupportFragmentManager(), \"EditOrDeletePopUpFragment\");\r\n            }\r\n        });\r\n\r\n        _reminderAdapter.clear();\r\n        _reminderAdapter.add(_testReminder.summary());\r\n\r\n        // Test code: this fires a notification 3 seconds after launch\r\n        final Handler handler = new Handler();\r\n        handler.postDelayed(new Runnable() {\r\n            @Override\r\n            public void run() {\r\n                Reminder reminder = new Reminder();\r\n                showReminderNotification(_testReminder);\r\n            }\r\n        }, 3000);\r\n\r\n    }\r\n\r\n    public void onSignOut(View view) {\r\n        AuthUI.getInstance()\r\n                .signOut(this)\r\n                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                    public void onComplete(Task<Void> task) {\r\n                        // ...\r\n                    }\r\n                });\r\n    }\r\n\r\n    public void onNewReminder(View view) {\r\n        Intent intent = new Intent(this, EditReminderActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    private void createNotificationChannel() {\r\n         CharSequence name = getString(R.string.channel_name);\r\n         String description = getString(R.string.channel_description);\r\n         int importance = NotificationManager.IMPORTANCE_DEFAULT;\r\n         NotificationChannel channel =\r\n                 new NotificationChannel(ReminderNotificationChannelId, name, importance);\r\n         channel.setDescription(description);\r\n         // Register the channel with the system; you can't change the importance\r\n        // or other notification behaviors after this\r\n        NotificationManager notificationManager = getSystemService(NotificationManager.class);\r\n        notificationManager.createNotificationChannel(channel);\r\n    }\r\n\r\n    public void showReminderNotification(Reminder reminder) {\r\n        NotificationCompat.Builder builder =\r\n                new NotificationCompat.Builder(\r\n                        MainActivity.this, ReminderNotificationChannelId);\r\n        builder.setContentTitle(\"Reminder\");\r\n        /* Need to make the text the reminder summary*/\r\n        builder.setContentText(_testReminder.summary());\r\n        /* We could add a custom icon as a stretch goal */\r\n        builder.setSmallIcon(R.drawable.ic_launcher_background);\r\n        builder.setAutoCancel(true);\r\n\r\n        NotificationManagerCompat managerCompat = NotificationManagerCompat.from(MainActivity.this);\r\n        managerCompat.notify(reminder.notificationId(), builder.build());\r\n    }\r\n\r\n    public void showReminder(View view) {\r\n        Intent intent = new Intent(this, ReminderActivity.class);\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onDialogEditClick(DialogFragment dialog) {\r\n        // User touched the dialog's positive button\r\n        Log.d(LOGTAG, \"Edit pressed\");\r\n\r\n        Intent intent = new Intent(this, EditReminderActivity.class);\r\n        intent.putExtra(EditReminderActivity.ReminderKey, _testReminder.toJSON());\r\n\r\n        startActivity(intent);\r\n    }\r\n\r\n    @Override\r\n    public void onDialogDeleteClick(DialogFragment dialog) {\r\n        // User touched the dialog's negative button\r\n        Log.d(LOGTAG, \"Delete pressed\");\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/cs246/team1/spacedrepetition/MainActivity.java	(revision b65d032e543367fc5796cc5d2c0701fb1745d6fe)
+++ app/src/main/java/com/cs246/team1/spacedrepetition/MainActivity.java	(date 1605666998765)
@@ -50,6 +50,7 @@
         if (user == null) {
             startActivity(new Intent(this, LoginActivity.class));
         } else {
+            Log.d(LOGTAG, "User already logged in");
             TextView text = (TextView) findViewById(R.id.reminderLabel);
             text.setText("Hello, " + user.getDisplayName());
         }
